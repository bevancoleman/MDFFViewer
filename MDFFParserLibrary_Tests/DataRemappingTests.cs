using MDFFParserLibrary.Models.Enums;
using MDFFParserLibrary.Utility;

namespace MDFFParserLibrary_Tests;

[TestFixture]
public class DataRemappingTests
{
    //private IntervalDataRecord _parser;

    [SetUp]
    public void Setup()
    {
    }


    [Test]
    public void RemapValues_30To30Intervals()
    {
        var input30Interval = new decimal[48]
        {
            0.00500000000000m, 0.00400000000000m, 0.00400000000000m, 0.00400000000000m, 0.00500000000000m,
            0.00300000000000m, 0.00400000000000m, 0.00300000000000m, 0.00400000000000m, 0.00400000000000m,
            0.00300000000000m, 0.00400000000000m, 0.00400000000000m, 0.02700000000000m, 0.04500000000000m,
            0.08700000000000m, 0.35500000000000m, 0.02000000000000m, 0.14900000000000m, 0.51000000000000m,
            0.05000000000000m, 0.01700000000000m, 0.00400000000000m, 0.01900000000000m, 0.00600000000000m,
            0.00700000000000m, 0.00800000000000m, 0.00800000000000m, 0.01400000000000m, 0.00000000000000m,
            0.00000000000000m, 0.00000000000000m, 0.00000000000000m, 0.00000000000000m, 0.00000000000000m,
            0.00200000000000m, 0.00900000000000m, 0.00800000000000m, 0.00700000000000m, 0.00600000000000m,
            0.00700000000000m, 0.01000000000000m, 0.00800000000000m, 0.00700000000000m, 0.00700000000000m,
            0.00600000000000m, 0.00600000000000m, 0.00500000000000m
        };

        var expectedInput30Interval = new decimal[48]
        {
            0.00500000000000m, 0.00400000000000m, 0.00400000000000m, 0.00400000000000m, 0.00500000000000m,
            0.00300000000000m, 0.00400000000000m, 0.00300000000000m, 0.00400000000000m, 0.00400000000000m,
            0.00300000000000m, 0.00400000000000m, 0.00400000000000m, 0.02700000000000m, 0.04500000000000m,
            0.08700000000000m, 0.35500000000000m, 0.02000000000000m, 0.14900000000000m, 0.51000000000000m,
            0.05000000000000m, 0.01700000000000m, 0.00400000000000m, 0.01900000000000m, 0.00600000000000m,
            0.00700000000000m, 0.00800000000000m, 0.00800000000000m, 0.01400000000000m, 0.00000000000000m,
            0.00000000000000m, 0.00000000000000m, 0.00000000000000m, 0.00000000000000m, 0.00000000000000m,
            0.00200000000000m, 0.00900000000000m, 0.00800000000000m, 0.00700000000000m, 0.00600000000000m,
            0.00700000000000m, 0.01000000000000m, 0.00800000000000m, 0.00700000000000m, 0.00700000000000m,
            0.00600000000000m, 0.00600000000000m, 0.00500000000000m
        };

        var result = DataRemapping.RemapValues(input30Interval, 30, 30);

        Assert.That(result, Is.EqualTo(expectedInput30Interval));
    }

    [Test]
    public void RemapValues_5To30Intervals()
    {
        var input5Interval = new decimal[288]
        {
            0.17700000000000m, 0.05500000000000m, 0.06300000000000m, 0.05800000000000m, 0.05900000000000m,
            0.04200000000000m, 0.04100000000000m, 0.05000000000000m, 0.03900000000000m, 0.04000000000000m,
            0.04100000000000m, 0.04000000000000m, 0.03900000000000m, 0.05100000000000m, 0.05000000000000m,
            0.04100000000000m, 0.04100000000000m, 0.03900000000000m, 0.04000000000000m, 0.05400000000000m,
            0.06200000000000m, 0.06600000000000m, 0.05800000000000m, 0.05500000000000m, 0.04400000000000m,
            0.04300000000000m, 0.04100000000000m, 0.05200000000000m, 0.05300000000000m, 0.04100000000000m,
            0.04400000000000m, 0.04400000000000m, 0.04500000000000m, 0.05200000000000m, 0.05600000000000m,
            0.05500000000000m, 0.04900000000000m, 0.04500000000000m, 0.04500000000000m, 0.04600000000000m,
            0.04500000000000m, 0.05600000000000m, 0.05600000000000m, 0.04400000000000m, 0.04500000000000m,
            0.04500000000000m, 0.04100000000000m, 0.04000000000000m, 0.04500000000000m, 0.04400000000000m,
            0.03700000000000m, 0.03300000000000m, 0.03100000000000m, 0.03300000000000m, 0.03100000000000m,
            0.04100000000000m, 0.04600000000000m, 0.03400000000000m, 0.03300000000000m, 0.03300000000000m,
            0.03200000000000m, 0.03400000000000m, 0.04400000000000m, 0.04300000000000m, 0.03600000000000m,
            0.03500000000000m, 0.03300000000000m, 0.03800000000000m, 0.04300000000000m, 0.05000000000000m,
            0.04900000000000m, 0.03900000000000m, 0.03500000000000m, 0.03600000000000m, 0.03400000000000m,
            0.03400000000000m, 0.05100000000000m, 0.04400000000000m, 0.03700000000000m, 0.03600000000000m,
            0.03300000000000m, 0.03600000000000m, 0.03500000000000m, 0.04100000000000m, 0.04500000000000m,
            0.03700000000000m, 0.03200000000000m, 0.04200000000000m, 0.03300000000000m, 0.03400000000000m,
            0.14500000000000m, 0.07300000000000m, 0.07200000000000m, 0.11700000000000m, 0.13800000000000m,
            0.10400000000000m, 0.07800000000000m, 0.07800000000000m, 0.08300000000000m, 0.08700000000000m,
            0.20200000000000m, 0.19800000000000m, 0.32900000000000m, 0.36100000000000m, 0.26600000000000m,
            0.25600000000000m, 0.21800000000000m, 0.11700000000000m, 0.11200000000000m, 0.00600000000000m,
            0.00200000000000m, 0.00000000000000m, 0.00200000000000m, 0.00400000000000m, 0.00100000000000m,
            0.00100000000000m, 0.00100000000000m, 0.00000000000000m, 0.00100000000000m, 0.00000000000000m,
            0.00200000000000m, 0.00000000000000m, 0.00600000000000m, 0.00200000000000m, 0.00400000000000m,
            0.00500000000000m, 0.00600000000000m, 0.00300000000000m, 0.00300000000000m, 0.00500000000000m,
            0.00300000000000m, 0.00300000000000m, 0.00600000000000m, 0.00200000000000m, 0.00100000000000m,
            0.00100000000000m, 0.00000000000000m, 0.00300000000000m, 0.00600000000000m, 0.00300000000000m,
            0.00600000000000m, 0.00700000000000m, 0.00100000000000m, 0.00200000000000m, 0.00100000000000m,
            0.00100000000000m, 0.00300000000000m, 0.00100000000000m, 0.00500000000000m, 0.00600000000000m,
            0.00200000000000m, 0.00200000000000m, 0.00100000000000m, 0.00300000000000m, 0.00300000000000m,
            0.00100000000000m, 0.00300000000000m, 0.00600000000000m, 0.00200000000000m, 0.00100000000000m,
            0.00100000000000m, 0.00700000000000m, 0.00400000000000m, 0.00600000000000m, 0.00200000000000m,
            0.00100000000000m, 0.00200000000000m, 0.00300000000000m, 0.00300000000000m, 0.00000000000000m,
            0.00200000000000m, 0.00500000000000m, 0.00300000000000m, 0.00100000000000m, 0.00500000000000m,
            0.00100000000000m, 0.00300000000000m, 0.00700000000000m, 0.07900000000000m, 0.00300000000000m,
            0.00200000000000m, 0.00400000000000m, 0.00200000000000m, 0.00400000000000m, 0.00100000000000m,
            0.00100000000000m, 0.00200000000000m, 0.00100000000000m, 0.00000000000000m, 0.00400000000000m,
            0.00600000000000m, 0.00600000000000m, 0.00600000000000m, 0.00100000000000m, 0.00100000000000m,
            0.00400000000000m, 0.00100000000000m, 0.00400000000000m, 0.00600000000000m, 0.00300000000000m,
            0.00100000000000m, 0.00100000000000m, 0.00000000000000m, 0.00100000000000m, 0.00200000000000m,
            0.00100000000000m, 0.00200000000000m, 0.00200000000000m, 0.00100000000000m, 0.00200000000000m,
            0.00100000000000m, 0.00200000000000m, 0.00100000000000m, 0.00100000000000m, 0.00300000000000m,
            0.00100000000000m, 0.00000000000000m, 0.00100000000000m, 0.00000000000000m, 0.00100000000000m,
            0.00000000000000m, 0.00100000000000m, 0.00100000000000m, 0.00000000000000m, 0.00100000000000m,
            0.00200000000000m, 0.00000000000000m, 0.00100000000000m, 0.00000000000000m, 0.00100000000000m,
            0.00100000000000m, 0.00000000000000m, 0.00100000000000m, 0.00100000000000m, 0.00100000000000m,
            0.00300000000000m, 0.00000000000000m, 0.00100000000000m, 0.00000000000000m, 0.00200000000000m,
            0.00100000000000m, 0.00000000000000m, 0.00200000000000m, 0.00400000000000m, 0.00100000000000m,
            0.00200000000000m, 0.00000000000000m, 0.00100000000000m, 0.00000000000000m, 0.00200000000000m,
            0.00100000000000m, 0.00100000000000m, 0.00200000000000m, 0.00000000000000m, 0.00100000000000m,
            0.00100000000000m, 0.00300000000000m, 0.15600000000000m, 0.26100000000000m, 0.20400000000000m,
            0.19800000000000m, 0.26700000000000m, 0.22000000000000m, 0.08700000000000m, 0.17700000000000m,
            0.20700000000000m, 0.29600000000000m, 0.29100000000000m, 0.11800000000000m, 0.10500000000000m,
            0.11400000000000m, 0.11600000000000m, 0.10600000000000m, 0.09400000000000m, 0.12300000000000m,
            0.18500000000000m, 0.09800000000000m, 0.14200000000000m, 0.07300000000000m, 0.08700000000000m,
            0.08500000000000m, 0.07500000000000m, 0.07500000000000m, 0.07700000000000m, 0.07700000000000m,
            0.07600000000000m, 0.07800000000000m, 0.08300000000000m
        };

        var expectedInput5Interval = new decimal[48]
        {
            0.45400000000000m, 0.25100000000000m, 0.26100000000000m, 0.33500000000000m, 0.27400000000000m,
            0.29600000000000m, 0.28600000000000m, 0.27100000000000m, 0.22300000000000m, 0.21800000000000m,
            0.22400000000000m, 0.25200000000000m, 0.23400000000000m, 0.21800000000000m, 0.22300000000000m,
            0.64900000000000m, 0.72600000000000m, 1.54700000000000m, 0.12600000000000m, 0.00400000000000m,
            0.01900000000000m, 0.02300000000000m, 0.01300000000000m, 0.02500000000000m, 0.01700000000000m,
            0.01200000000000m, 0.02000000000000m, 0.01800000000000m, 0.01400000000000m, 0.09800000000000m,
            0.01400000000000m, 0.01900000000000m, 0.01700000000000m, 0.01200000000000m, 0.01000000000000m,
            0.00900000000000m, 0.00300000000000m, 0.00500000000000m, 0.00400000000000m, 0.00700000000000m,
            0.01000000000000m, 0.00500000000000m, 0.16300000000000m, 1.23700000000000m, 1.19400000000000m,
            0.73800000000000m, 0.56000000000000m, 0.46600000000000m
        };

        var result = DataRemapping.RemapValues(input5Interval, 30, 5);

        Assert.That(result, Is.EqualTo(expectedInput5Interval));
    }
}